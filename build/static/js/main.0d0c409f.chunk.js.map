{"version":3,"sources":["images/header.png","images/icons/logo.png","components/Room/Room.js","components/Home/Home.js","components/Login/firebase.confiq.js","components/Login/Login.js","components/Book/Book.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Room","room","classes","history","useHistory","Card","className","CardHeader","Avatar","aria-label","title","CardMedia","image","imgUrl","src","bedType","alt","CardContent","Typography","variant","color","component","description","CardActions","disableSpacing","IconButton","bed","capacity","price","Button","onClick","push","Home","style","display","margin","justifyContent","map","key","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","app","initializeApp","Login","useContext","userContext","setLoggedInUser","useState","newUser","setNewUser","isSignedIn","name","email","password","photo","error","success","user","setUser","from","useLocation","state","pathname","handleBlur","event","isFieldValid","target","test","value","passwordValid","passwordHasNumber","newUserInfo","updateUserName","auth","currentUser","updateProfile","displayName","then","console","log","catch","googleProvider","GoogleAuthProvider","signInWithPopup","res","replace","errorCode","code","errorMessage","message","credential","facebookProvider","FacebookAuthProvider","type","onChange","id","htmlFor","action","onSubmit","e","createUserWithEmailAndPassword","signInWithEmailAndPassword","preventDefault","onBlur","placeholder","Book","useParams","textAlign","to","Header","backgroundImage","header","logo","PrivateRoute","children","rest","loggedInUser","render","location","createContext","App","Provider","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d0c409f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.50ce2657.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5c655479.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport LocalHotelIcon from '@material-ui/icons/LocalHotel';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function Room({room}){\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n    const handleBook = (bedType) => {\r\n        history.push(`/book/${bedType}`);\r\n    }\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {room.avatar}\r\n          </Avatar>\r\n        }\r\n        title={room.title}\r\n      />\r\n\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={room.imgUrl}\r\n        title=\"Paella dish\"\r\n      />\r\n      <img src={`/images/${room.bedType}.png`} alt=\"\"/>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {room.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <LocalHotelIcon />: {room.bed} \r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <WcIcon />: {room.capacity} \r\n        </IconButton>\r\n        <IconButton aria-label=\"price\">\r\n          <AttachMoneyIcon />: {room.price} \r\n        </IconButton>\r\n        <Button onClick={() => handleBook(room.bedType)} variant=\"contained\" color=\"primary\">\r\n            Book\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Room from '../Room/Room';\r\n\r\nconst Home = () => {\r\n    const style = {\r\n        display: 'flex',\r\n        margin: '40px',\r\n        justifyContent: 'space-between'\r\n    }\r\n    const rooms = [\r\n        {\r\n            title: 'Standard Single Room',\r\n            description: 'Standard Single Rooms are designed in open -concept living area and have many facilities.',\r\n            imgUrl: 'https://cdn.jumeirah.com/-/mediadh/dh/hospitality/jumeirah/offers/offer-images/burj-al-arab-presidential-suite-living-room-4-hero.jpg',\r\n            bed: 1,\r\n            capacity: 1,\r\n            bedType: 'Single',\r\n            avatar: 'S',\r\n            price: 119\r\n        },\r\n        {\r\n            title: 'Couple Power Room',\r\n            description: 'Superior Double Rooms are perfectly equipped for traveling couples or friends.',\r\n            imgUrl: 'https://cdn.jumeirah.com/-/mediadh/dh/hospitality/jumeirah/offers/offer-images/burj-al-arab-royal-suite-staircase-5-hero.jpg',\r\n            bed: 1,\r\n            capacity: 2,\r\n            bedType: 'Double',\r\n            avatar: 'D',\r\n            price: 149\r\n        },\r\n        {\r\n            title: 'Family Capacity Room',\r\n            description: ' Have lots of in-room facilities and are designed in open-concept living area.',\r\n            imgUrl: 'https://cdn.jumeirah.com/-/mediadh/dh/hospitality/jumeirah/hotels/dubai/burj-al-arab-jumeirah/room/presidential-two-bedroom-suite/burj-al-arab-presidential-suite-guest-bedroom_6-4_landscape/burj-al-arab-presidential-suite-guest-bedroom_16-9_landscape.jpg?w=2080',\r\n            bed: 2,\r\n            capacity: 4,\r\n            bedType: 'Family',\r\n            avatar: 'F',\r\n            price: 199\r\n        }\r\n    ]\r\n    return (\r\n        <div style={style}>\r\n            {\r\n                rooms.map(room => <Room key={room.bedType} room={room}></Room>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","const firebaseConfig = {\r\n  apiKey: \"AIzaSyAjP81yNJsjOLXYyztJxLS9SgTw_NNHXeE\",\r\n  authDomain: \"react-firebase-burj-al-a-20138.firebaseapp.com\",\r\n  projectId: \"react-firebase-burj-al-a-20138\",\r\n  storageBucket: \"react-firebase-burj-al-a-20138.appspot.com\",\r\n  messagingSenderId: \"157500304598\",\r\n  appId: \"1:157500304598:web:c61f6de2988b6d3dc8ed77\"\r\n};\r\n\r\nexport default firebaseConfig;","import React, { useContext, useState } from 'react';\r\nimport './Login.css'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.confiq';\r\nimport { userContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  }else {\r\n    firebase.app(); \r\n  }\r\n\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(userContext);\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        photo: '',\r\n        error: '',\r\n        success: false\r\n      })\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        var googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(googleProvider)\r\n        .then(res => {\r\n            const {displayName, email} = res.user;\r\n            const signInUser = {name: displayName, email};\r\n            // console.log(signInUser);\r\n            setLoggedInUser(signInUser);\r\n            history.replace(from);\r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            var email = error.email;\r\n            var credential = error.credential;\r\n            console.log(errorCode, errorMessage, email, credential)\r\n        });\r\n    }\r\n\r\n    const handleFacebookSignIn = () => {\r\n        var facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n        firebase.auth().signInWithPopup(facebookProvider)\r\n        .then(res => {\r\n            const {displayName, email} = res.user;\r\n            const signInUser = {name: displayName, email};\r\n            // console.log(signInUser);\r\n            setLoggedInUser(signInUser);\r\n            history.replace(from);\r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            var email = error.email;\r\n            var credential = error.credential;\r\n            console.log(errorCode, errorMessage, email, credential)\r\n        });\r\n    }\r\n\r\n    const handleBlur = (event) => {\r\n        // console.log(event.target.name, event.target.value);\r\n        let isFieldValid = true;\r\n        if(event.target.name == 'email'){\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(event.target.value);\r\n        }\r\n        if(event.target.name == 'password'){\r\n            const passwordValid = event.target.value.length > 6;\r\n            const passwordHasNumber = /\\d{1}/.test(event.target.value)\r\n            // console.log(passwordValid && passwordHasNumber)\r\n            isFieldValid = passwordValid && passwordHasNumber\r\n        }\r\n        if(isFieldValid){\r\n            const newUserInfo = {...user};\r\n            newUserInfo[event.target.name] = event.target.value;\r\n            setUser(newUserInfo)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if(newUser && user.email && user.password){\r\n            firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n            .then(res => {\r\n                const newUserInfo = {...user};\r\n                newUserInfo.error = '';\r\n                newUserInfo.success = true;\r\n                setLoggedInUser(newUserInfo);\r\n\r\n                updateUserName(user.name)\r\n\r\n                history.replace(from);\r\n            })\r\n            .catch((error) => {\r\n                const newUserInfo = {...user}\r\n                newUserInfo.error = error.message;\r\n                newUserInfo.success = false;\r\n                setLoggedInUser(newUserInfo);\r\n            });\r\n        }\r\n        if(!newUser && user.email && user.password){\r\n            firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n            .then(res => {\r\n                const newUserInfo = {...user};\r\n                newUserInfo.error = '';\r\n                newUserInfo.success = true;\r\n                setLoggedInUser(newUserInfo);\r\n\r\n                console.log('Sign in User SuccessFully', res.user);\r\n\r\n                history.replace(from);\r\n            })\r\n            .catch((error) => {\r\n                const newUserInfo = {...user}\r\n                newUserInfo.error = error.message;\r\n                newUserInfo.success = false;\r\n                setLoggedInUser(newUserInfo);\r\n            });\r\n\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const updateUserName = name => {\r\n        const user = firebase.auth().currentUser;\r\n    \r\n        user.updateProfile({\r\n          displayName: name\r\n        }).then(function() {\r\n          console.log('Update User Name Succesfully')\r\n        }).catch(function(error) {\r\n          console.log(error)\r\n        });\r\n      }\r\n    return (\r\n        <div className=\"login\">\r\n            <h1>This is Login Page</h1>\r\n            <button onClick={handleGoogleSignIn}>Google Sign In</button> \r\n             &nbsp;\r\n            <button onClick={handleFacebookSignIn}>Facebook Sign In</button>\r\n            {/* <p>Name: {loggedInUser.name}</p> */}\r\n\r\n            <br />\r\n            <p>Or</p>\r\n\r\n            <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\" />\r\n            <label htmlFor=\"newUser\">New User Sign Up</label>\r\n\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                {newUser && <input type=\"text\" name=\"name\" onBlur={handleBlur} placeholder=\"Enter Your Name\" />}\r\n                <br />\r\n                <input type=\"email\" name=\"email\" onBlur={handleBlur} placeholder=\"Enter Your Email\" />\r\n                <br />\r\n                <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Enter Your Password\" />\r\n                <br />\r\n                <input type=\"submit\" value={newUser ? 'Sign Up' : 'Sign In'}/>\r\n            </form>\r\n\r\n            {/* <p style={{color: 'red'}}>{user.error}</p>\r\n            { user.success && <p style={{color: 'green'}}>User {newUser ? 'Create' : 'LogIn'} A Succesfully</p>} */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Book = () => {\r\n    const {bedType} = useParams();\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <h1>Let's book a {bedType} Room.</h1>\r\n            <p>Want a <Link to=\"/home\">different room?</Link> </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport header from '../../images/header.png';\r\nimport logo from '../../images/icons/logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div style={{ backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(${header})` }} className=\"header\">\r\n            <nav className=\"nav\">\r\n                <ul>\r\n                    <li>\r\n                        <img className=\"logo\" src={logo} alt=\"\"/>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"btn-book\" to=\"/book\">Book</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"title-container\">\r\n                <h1>Burj Al Arab</h1>\r\n                <h2>A global icon of Arabian luxury</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { userContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(userContext)\r\n    return (\r\n    <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            loggedInUser.email ? (\r\n            children\r\n            ) : (\r\n            <Redirect\r\n                to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n                }}\r\n            />\r\n            )\r\n        }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { createContext, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Home from './components/Home/Home';\r\nimport Login from './components/Login/Login';\r\nimport Book from './components/Book/Book';\r\nimport Header from './components/Header/Header';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\n\r\nexport const userContext = createContext()\r\n\r\nfunction App() {\r\n  const [loggedInUser, setLoggedInUser] = useState({})\r\n  return (\r\n    <userContext.Provider value={[loggedInUser, setLoggedInUser]}>\r\n      <Router>\r\n          <Header/>\r\n          <Switch>\r\n            <Route path=\"/home\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <PrivateRoute path=\"/book/:bedType\">\r\n              <Book />\r\n            </PrivateRoute>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    </userContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}